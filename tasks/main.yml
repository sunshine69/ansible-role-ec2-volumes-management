---
# tasks file for ansible-role-ec2-volume-management
- include_role:
   name: aws_profile_account
  vars:
# iam role arn for this ec2 I am running to assume so that I have the
# permission to do this tasks
    aws_profile_account_role_arn: "{{ profile_account_role_arn|default() }}"
    aws_profile_account_role_session_name: 'role: ec2-volume-management'
    aws_profile_account_region: "{{ profile_account_region|default(region|default()) }}"
  when: not profile|default()

- name: set credentials fact
  set_fact:
    sts_creds: "{{ (sts_result|default({})).sts_creds|default({}) }}"
  no_log: yes

- name: Get tempfile
  tempfile:
    state: file
  register: tempfile

- name: Template the python script file
  template:
    src: "{{ lambda_function_name }}.py"
    dest: "{{ tempfile.path }}.py"

- name: Create zip file
  archive:
    path: "{{ tempfile.path }}.py"
    dest: "{{ tempfile.path }}.zip"
    format: zip

- include_role:
    name: ansible-role-aws-lambda
  vars:
    aws_lambda_profile: "{{ profile|default() }}"
    aws_lambda_region: "{{ region|default() }}"
    aws_lambda_access_key: "{{ sts_creds.access_key|default() }}"
    aws_lambda_secret_key: "{{ sts_creds.secret_key|default() }}"
    aws_lambda_security_token: "{{ sts_creds.session_token|default() }}"
    aws_lambda_function_name: "{{ lambda_function_name }}"
    aws_lambda_handler: "{{ lambda_function_name }}.lambda_handler"
    aws_lambda_runtime: "{{ lambda_runtime }}"
    aws_lambda_zip_file: "{{ tempfile.path }}.zip"
    aws_lambda_iam_role: "{{ iam_role_name }}"
    aws_lambda_iam_role_policy: "{{ lookup('template', iam_role_name + '-policy.json.j2') }}"
    aws_lambda_iam_role_trust_policy: "{{ lookup('file', 'ec2-trust-policy.json') }}"
    aws_lambda_schedule_rule_name: "{{ lambda_function_name }}-cloudwatch-rule"
    aws_lambda_schedule_rule_description: "Run {{ lambda_function_name }}"
    aws_lambda_schedule_rule_expression: '{{ lambda_scheduled_rule_expression }}'

- name: Cleanup tempfile
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ tempfile.path }}.zip"
    - "{{ tempfile.path }}.py"
    - "{{ tempfile.path }}"
